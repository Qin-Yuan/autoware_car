<?xml version="1.0"?>
<launch>
  <!-- 3D 定位跳跃、异常、报错受 webots 点云数据影响，通过使用实物3D激光雷达替换后定位正常，后续继续跟踪问题 -->
  <!-- map file and path -->
  <arg name="launch_map" default="true" description="launch map"/>
  <!-- 切换使用 gazebo_lio_sam_maps 或者 webots_lio_sam_maps 的点云地图-->
  <arg name="map_path" default="$(find-pkg-share autoware_slam)/maps/webots_lio_sam_maps" description="point cloud and lanelet2 map directory path"/>
  <arg name="lanelet2_map_file" default="lanelet2_map.osm" description="lanelet2 map file name"/>
  <arg name="pointcloud_map_file" default="pointcloud_map.pcd" description="pointcloud map file name"/>
  <!-- Parameter files -->
  <arg name="ndt_scan_matcher_param_path" default="$(find-pkg-share ndt_scan_matcher)/config/ndt_scan_matcher.param.yaml"/>
  <arg name="localization_error_monitor_param_path" default="$(find-pkg-share localization_error_monitor)/config/localization_error_monitor.param.yaml"/>
  <!-- Global parameters -->
  <arg name="use_sim_time" default="true" description="use_sim_time"/>
  <!-- Global parameters -->
  <group scoped="false">
    <include file="$(find-pkg-share global_parameter_loader)/launch/global_params.launch.py">
      <arg name="use_sim_time" value="$(var use_sim_time)"/>
      <arg name="vehicle_model" value="sample_vehicle"/>
    </include>
  </group>

  <!-- Map module -->
  <group if="$(var launch_map)">
    <include file="$(find-pkg-share autoware_launch)/launch/components/tier4_map_component.launch.xml"/>
  </group>
  
  <!-- localization module -->
  <group>
    <push-ros-namespace namespace="localization"/>
    <!-- util module -->
    <group>
      <push-ros-namespace namespace="util"/>
      <!-- 点云降采样 -->
      <include file="$(find-pkg-share ndt_scan_matcher)/launch/random_downsample_filter.launch.xml">
        <arg name="input_topic_name" value="/sensing/lidar/top/pointcloud_raw"/>
        <arg name="output_topic_name" value="/localization/util/downsample/pointcloud"/>
        <arg name="sample_num" value="1500"/>
        <arg name="input_frame" value="velodyne_top_base_link"/>
        <arg name="output_frame" value="velodyne_top_base_link"/>
      </include>
      <!-- pose_initializer 定位初始化 -->
      <include file="$(find-pkg-share pose_initializer)/launch/pose_initializer.launch.xml">
        <arg name="gnss_enabled" value="true"/>
        <arg name="ndt_enabled" value="true"/>
        <arg name="ekf_enabled" value="true"/>
        <arg name="stop_check_enabled" value="true"/>
      </include>
      <!-- pose_initializer (Automatic call from AD API) -->
      <include file="$(find-pkg-share automatic_pose_initializer)/launch/automatic_pose_initializer.launch.xml"/>
      <!-- vehicle_velocity_converter -->
      <!-- <include file="$(find-pkg-share vehicle_velocity_converter)/launch/vehicle_velocity_converter.launch.xml"/> -->
      <include file="$(find-pkg-share vehicle_velocity_converter)/launch/vehicle_velocity_converter.launch.xml">
        <!-- 输入 car 的速度相关信息，这个在 autoware_gazebo_utils/vehlicle_gazebo_pub 节点中做了发布-->
        <arg name="input_vehicle_velocity_topic" value="/vehicle/status/velocity_status"/>
        <!-- 输出，作为 Gyro_odometer 的 input_vehicle_twist_with_covariance_topic 输入-->
        <arg name="output_twist_with_covariance" value="/sensing/vehicle_velocity_converter/twist_with_covariance"/>
      </include>
    </group>

    <!-- pose_estimator module 位置初预测，NDT点云匹配 -->
    <group>
      <push-ros-namespace namespace="pose_estimator"/>
      <include file="$(find-pkg-share tier4_localization_launch)/launch/pose_estimator/pose_estimator.launch.xml">
        <arg name="ndt_scan_matcher_param_path" value="$(var ndt_scan_matcher_param_path)"/>
      </include>
    </group>
    <!-- twist_estimator module 速度预测，根据陀螺仪和速度控制指令进行预测 -->
    <group>
      <push-ros-namespace namespace="twist_estimator"/>
      <include file="$(find-pkg-share tier4_localization_launch)/launch/twist_estimator/twist_estimator.launch.xml"/>
    </group>
    <!-- pose_twist_fusion_filter module 最终的位置预测 -->
    <group>
      <push-ros-namespace namespace="pose_twist_fusion_filter"/>
      <include file="$(find-pkg-share tier4_localization_launch)/launch/pose_twist_fusion_filter/pose_twist_fusion_filter.launch.xml"/>
    </group>
    <!-- localization_error_monitor_module 定位异常检测模块 -->
    <group>
      <include file="$(find-pkg-share tier4_localization_launch)/launch/localization_error_monitor/localization_error_monitor.launch.xml">
        <arg name="localization_error_monitor_param_path" value="$(var localization_error_monitor_param_path)"/>
      </include>
    </group>
    
    <!-- API -->
    <group>
      <include file="$(find-pkg-share autoware_launch)/launch/components/tier4_autoware_api_component.launch.xml"/>
    </group>
  </group>
</launch>
